
trigger: none

pool: New-Ferji-pool

jobs:
 - job: terraforminit
   displayName: 'terrafromInitStage'
   steps: 
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/todoapp_infra'
        backendServiceArm: 'ferji-connectiom'
        backendAzureRmStorageAccountName: 'ferjistorageacoount'
        backendAzureRmContainerName: 'farji-container'
        backendAzureRmKey: 'terraform.tfstate  '

 - job: terraformplan
   displayName: 'terraformPlanStage'
   dependsOn: terraforminit
   steps:

    - task: TerraformTask@5
      inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todoapp_infra'
          backendServiceArm: 'ferji-connectiom'
          backendAzureRmStorageAccountName: 'ferjistorageacoount'
          backendAzureRmContainerName: 'farji-container'
          backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/todoapp_infra'
        environmentServiceNameAzureRM: 'ferji-connectiom'

 - job: terraformapply
   displayName: 'terraformApplyStage'
   dependsOn: terraformplan
   steps:
    - task: TerraformTask@5
      inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todoapp_infra'
          backendServiceArm: 'ferji-connectiom'
          backendAzureRmStorageAccountName: 'ferjistorageacoount'
          backendAzureRmContainerName: 'farji-container'
          backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)todoapp_infra'
        environmentServiceNameAzureRM: 'ferji-connectiom'